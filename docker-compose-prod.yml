version: "3.8"

services:
  
  kafka:
    image: bitnami/kafka
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=kafka-cluster-dono
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_persistent:/var/lib/kafka
    networks:
      - hexagonal-kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    restart: on-failure:3
    healthcheck:
      test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9092; exit $$?;'"
      interval: 30s
      timeout: 10s
      retries: 3
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: kafka-cluster-dono
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - hexagonal-kafka
    ports:
      - 8081:8080
    restart: on-failure:3
    depends_on:
      kafka:
        condition: service_healthy
   
  hexagonal-arch-proof:
    build: ./
    container_name: hexagonal-arch-proof
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - hexagonal-kafka
    ports:
      - 8080:8080
    restart: on-failure:3
    depends_on:
      kafka:
        condition: service_healthy      
      
networks:
  hexagonal-kafka:
    name: hexagonal-kafka

volumes:
  kafka_persistent: {}
  